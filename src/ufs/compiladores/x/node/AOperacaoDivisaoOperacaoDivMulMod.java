/* This file was generated by SableCC (http://www.sablecc.org/). */

package ufs.compiladores.x.node;

import ufs.compiladores.x.analysis.*;

@SuppressWarnings("nls")
public final class AOperacaoDivisaoOperacaoDivMulMod extends POperacaoDivMulMod
{
    private POperacaoDivMulMod _operacaoDivMulMod_;
    private TDivisao _divisao_;
    private POperacaoUnaria _operacaoUnaria_;

    public AOperacaoDivisaoOperacaoDivMulMod()
    {
        // Constructor
    }

    public AOperacaoDivisaoOperacaoDivMulMod(
        @SuppressWarnings("hiding") POperacaoDivMulMod _operacaoDivMulMod_,
        @SuppressWarnings("hiding") TDivisao _divisao_,
        @SuppressWarnings("hiding") POperacaoUnaria _operacaoUnaria_)
    {
        // Constructor
        setOperacaoDivMulMod(_operacaoDivMulMod_);

        setDivisao(_divisao_);

        setOperacaoUnaria(_operacaoUnaria_);

    }

    @Override
    public Object clone()
    {
        return new AOperacaoDivisaoOperacaoDivMulMod(
            cloneNode(this._operacaoDivMulMod_),
            cloneNode(this._divisao_),
            cloneNode(this._operacaoUnaria_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOperacaoDivisaoOperacaoDivMulMod(this);
    }

    public POperacaoDivMulMod getOperacaoDivMulMod()
    {
        return this._operacaoDivMulMod_;
    }

    public void setOperacaoDivMulMod(POperacaoDivMulMod node)
    {
        if(this._operacaoDivMulMod_ != null)
        {
            this._operacaoDivMulMod_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operacaoDivMulMod_ = node;
    }

    public TDivisao getDivisao()
    {
        return this._divisao_;
    }

    public void setDivisao(TDivisao node)
    {
        if(this._divisao_ != null)
        {
            this._divisao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._divisao_ = node;
    }

    public POperacaoUnaria getOperacaoUnaria()
    {
        return this._operacaoUnaria_;
    }

    public void setOperacaoUnaria(POperacaoUnaria node)
    {
        if(this._operacaoUnaria_ != null)
        {
            this._operacaoUnaria_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operacaoUnaria_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._operacaoDivMulMod_)
            + toString(this._divisao_)
            + toString(this._operacaoUnaria_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._operacaoDivMulMod_ == child)
        {
            this._operacaoDivMulMod_ = null;
            return;
        }

        if(this._divisao_ == child)
        {
            this._divisao_ = null;
            return;
        }

        if(this._operacaoUnaria_ == child)
        {
            this._operacaoUnaria_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._operacaoDivMulMod_ == oldChild)
        {
            setOperacaoDivMulMod((POperacaoDivMulMod) newChild);
            return;
        }

        if(this._divisao_ == oldChild)
        {
            setDivisao((TDivisao) newChild);
            return;
        }

        if(this._operacaoUnaria_ == oldChild)
        {
            setOperacaoUnaria((POperacaoUnaria) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
