/* This file was generated by SableCC (http://www.sablecc.org/). */

package ufs.compiladores.x.node;

import ufs.compiladores.x.analysis.*;

@SuppressWarnings("nls")
public final class ADecConstanteRecPrograma extends PPrograma
{
    private PPrograma _programa_;
    private PDecConst _decConst_;

    public ADecConstanteRecPrograma()
    {
        // Constructor
    }

    public ADecConstanteRecPrograma(
        @SuppressWarnings("hiding") PPrograma _programa_,
        @SuppressWarnings("hiding") PDecConst _decConst_)
    {
        // Constructor
        setPrograma(_programa_);

        setDecConst(_decConst_);

    }

    @Override
    public Object clone()
    {
        return new ADecConstanteRecPrograma(
            cloneNode(this._programa_),
            cloneNode(this._decConst_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecConstanteRecPrograma(this);
    }

    public PPrograma getPrograma()
    {
        return this._programa_;
    }

    public void setPrograma(PPrograma node)
    {
        if(this._programa_ != null)
        {
            this._programa_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programa_ = node;
    }

    public PDecConst getDecConst()
    {
        return this._decConst_;
    }

    public void setDecConst(PDecConst node)
    {
        if(this._decConst_ != null)
        {
            this._decConst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decConst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programa_)
            + toString(this._decConst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programa_ == child)
        {
            this._programa_ = null;
            return;
        }

        if(this._decConst_ == child)
        {
            this._decConst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programa_ == oldChild)
        {
            setPrograma((PPrograma) newChild);
            return;
        }

        if(this._decConst_ == oldChild)
        {
            setDecConst((PDecConst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
