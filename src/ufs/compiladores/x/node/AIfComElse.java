/* This file was generated by SableCC (http://www.sablecc.org/). */

package ufs.compiladores.x.node;

import ufs.compiladores.x.analysis.*;

@SuppressWarnings("nls")
public final class AIfComElse extends PIfComElse
{
    private PComandoComElse _comandoComElse_;

    public AIfComElse()
    {
        // Constructor
    }

    public AIfComElse(
        @SuppressWarnings("hiding") PComandoComElse _comandoComElse_)
    {
        // Constructor
        setComandoComElse(_comandoComElse_);

    }

    @Override
    public Object clone()
    {
        return new AIfComElse(
            cloneNode(this._comandoComElse_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfComElse(this);
    }

    public PComandoComElse getComandoComElse()
    {
        return this._comandoComElse_;
    }

    public void setComandoComElse(PComandoComElse node)
    {
        if(this._comandoComElse_ != null)
        {
            this._comandoComElse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoComElse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comandoComElse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comandoComElse_ == child)
        {
            this._comandoComElse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comandoComElse_ == oldChild)
        {
            setComandoComElse((PComandoComElse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
